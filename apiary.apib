FORMAT: 1A
HOST: https://borrow-int.bqws.io/

# Borrow (v1.0)
This module controls the resource loans.
When a user wants to borrow a resource, he needs to use this module. If the resource is available to be borrowed, the user will get a temporal asset to access it.

# Group Loanable Resource

## Create [/v1.0/borrow]
### Add a loanable resource [POST]

###Parameters###
|Name|Description|Type|Default|Required
|----|-----------|----|:-----:|:------:|
|resourceId|Identifier of resource|string||*|
|availableUses|Amount of uses that the resource is available|number||*|
|availableLoans|Amount of concurrent loans are available for the resource|number||*
|expire|expire date|timestamp||*|
|start|start date|timestamp||*|
|asset|asset asigned to the resource|string||*|

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 201 (application/json)
    + Header
    
            Location: https://silkroad/borrow/123

        
## Get [/v1.0/borrow/{resourceId}]
### Get a loanable resource [GET]

###Response Fields###
|Name|Description|Type|
|------|-----|-----------|
|loanable|Indicates if the resource is loanable|boolean|
|usersInWaitingQueue|Number of users waiting for borrowing the resource|interger|
|resources|array of licenses of the resource|Array|
|resources.id|Id of the license|String|
|resources.lenderId|Id of the lender that provides the resource|String|
|resources.resourceId|Id of the loanable resource|String|
|resources.availableUses|Number of available uses of the resource|integer|
|resources.availableLoans|Number of available loans of the resource|integer|
|resources.start|Date when the resource begins to be available (milliseconds)|timestamp|
|resources.expire|Date when the resource expires (milliseconds)|timestamp|
|resources.asset|Asset that provides the loan of the resource|String|
|resources.asset.scopes|Scopes of the asset|Array|,
|resources.asset.name|Name of the asset|String|
|resources.loans|actual loans of the resource|Array|
|resources.loans.userId|Id of the borrower|String|
|resources.loans.start|Date when the loan starts (milliseconds)|timestamp|
|resources.loans.expire|Date when the loan expires (milliseconds)|timestamp|
|resources.loans.pendingConfirmation|Indicates if the loan is pending of confirmation|boolean|
|resources.loans.availableRenewals|Number of available renewals of the loan|int|
|resources.loans.type|Indicates if the loan is a BORROW or a RENEW|String|

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource unavailable|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["asset:test"],
                 "name":"asset:test",
                 "period":"P1D"}
            }],
        "loanable":true,
        "usersInWaitingQueue":0}
        
## Delete [/v1.0/borrow/{licenseId}]
### Delete a license of a loanable resource [DELETE]

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)
        

# Group Loanable Resource History

## Loanable Resources History [/v1.0/borrow/history]
### Get loanable resources history [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "userId":"1937djpifoi3142",
             "resourceId":"resourceId1423041701849",
             "start":1423041701849,
             "expire":1423041711849,
             "freeReturned":true,
             "freeReturned":true,
             "type": "RENEW" ]
        }            
        
      

## Loanable Resources History of a user [/v1.0/borrow/history/{userId}]
### Get loanable resources history [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        [{"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "userId":"1937djpifoi3142",
             "resourceId":"resourceId1423041701849",
             "start":1423041701849,
             "expire":1423041711849,
             "freeReturned":true,
             "freeReturned":true,
             "type": "RENEW" ]
        }]


## Loanable Resources History of logged user [/v1.0/borrow/history/me]
### Get loanable resources history [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        [{"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "userId":"1937djpifoi3142",
             "resourceId":"resourceId1423041701849",
             "start":1423041701849,
             "expire":1423041711849,
             "freeReturned":true,
             "freeReturned":true,
             "type": "RENEW" ]
        }]

# Group Loanable Resource Loans
## List all Loanable Resources lent to a user [/v1.0/borrow/loan/{userId}]
### Get all lent resources [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        [{"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }]   
            
            
## List all Loanable Resources lent to a user [/v1.0/borrow/loan/me]
### Get all lent resources [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|


+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        [{"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }]        
            

# Group Loanable Resource Reservations

## List all booked resources [/v1.0/book]
### Get all booked resources [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        [{"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }],
        "loanable":true,
        "usersInWaitingQueue":0}]
        
        
## List all resources booked by user [/v1.0/book/{userId}]
### Get all resources booked by user [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|


+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            },
            {"id":"54d1e4a6ccf2fdeasce54assh",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701845",
             "availableUses":10,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }],
        "loanable":true,
        "usersInWaitingQueue":0}
        
        

## List all resources booked by the logged user [/v1.0/book/me]
### Get all resources booked by the logged user [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|


+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            },
            {"id":"54d1e4a6ccf2fdeasce54assh",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701845",
             "availableUses":10,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }],
        "loanable":true,
        "usersInWaitingQueue":0}
        
        


            
# Group Loan

##User loan [/v1.0/borrow/{resourceId}/loan/{userId}]

### Apply for a loan [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|
|409  |conflict|If the resource can not be borrowed|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)

###Get a lent resource [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
        }  
        

##Logged User loan [/v1.0/borrow/{resourceId}/loan/me]

### Apply for a loan [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|
|409  |conflict|If the resource can not be borrowed|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)

###Get a lent resource [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
        }  


# Group Loan Renewal
## Renew a loan of a user [/v1.0/borrow/{resourceId}/renew/{userId}]
### Renew a loan of a user [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|
|409  |conflict|If the user hasn't resource borrowed |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)

## Renew a loan of the logged user [/v1.0/borrow/{resourceId}/renew/me]
### Renew a loan of the logged user [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|
|409  |conflict|If the user hasn't resource borrowed |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)

# Group Loan Reservation
## Book a loanable resource for a user [/v1.0/borrow/{resourceId}/book/{userId}]
### Book a loananble resource for a user [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|
|409  |conflict|If the resource can not be book|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)

## Book a loanable resource for the logged user [/v1.0/borrow/{resourceId}/book/me]
### Book a loanable resource for the logged user [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|
|409  |conflict|If the resource can not be book|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)

### Cancel a reservation of the logged user [DELETE]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204

# Group Lender

## Lender [/v1.0/lender]
+ Model (application/json)

        {
            "id": "LenderId",
            "borrowPeriod": "P5D",
            "freeReturnPeriod": "P1D",
            "reservationPeriod": "P1D",
            "maxConcurrentLoansPerUser": 5,
            "maxLoansPerUserInMonth": 20,
            "maxRenewalsPerResource": 2,
            "maxUsersInWaitingQueue": 100
        }

### Get my domain lender [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|     |
|404  |not_found|Lender not found in your domain|

+ Request
    + Headers

            Authorization : Bearer {token}
            Accept : (application/json)

+ Response 200

    [Lender][]

### Update my domain lender [PUT]
###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|     |
|404  |not_found|Lender not found in your domain|

+ Request
    
    + Headers

            Authorization : Bearer {token}
            Content-Type : (application/json)
            
    + Body

            {
            "borrowPeriod": "P5D",
            "freeReturnPeriod": "P1D",
            "reservationPeriod": "P1D",
            "maxConcurrentLoansPerUser": 5,
            "maxLoansPerUserInMonth": 20,
            "maxRenewalsPerResource": 2,
            "maxUsersInWaitingQueue": 100
            }

+ Response 204
   

### Delete my domain lender [DELETE]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|     |

+ Response 204 (application/json)

### Add a new lender [POST]
###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|     |
|409  |conflict| When a lender already exists with the same id|

+ Request
    
    + Headers

            Authorization : Bearer {token}
            Content-Type : (application/json)
            
    + Body

            {
            "id": "LenderId",
            "borrowPeriod": "P5D",
            "freeReturnPeriod": "P1D",
            "reservationPeriod": "P1D",
            "maxConcurrentLoansPerUser": 5,
            "maxLoansPerUserInMonth": 20,
            "maxRenewalsPerResource": 2,
            "maxUsersInWaitingQueue": 100
            }

+ Response 201

       + Headers
    
            Location : https://borrow-int.bqws.io/v1.0/lender/LenderId
 

## Lender by id [/v1.0/lender/{id}]

### Get lender by id [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|     |
|404  |not_found|Lender id not found|

+ Request
    + Headers

            Authorization : Bearer {token}
            Accept : (application/json)

+ Response 200

    [Lender][]



### Update lender by id [PUT]
###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|     |

+ Request
    
    + Headers

            Authorization : Bearer {token}
            Content-Type : (application/json)
            
    + Body

            {
            "borrowPeriod": "P5D",
            "freeReturnPeriod": "P1D",
            "reservationPeriod": "P1D",
            "maxConcurrentLoansPerUser": 5,
            "maxLoansPerUserInMonth": 20,
            "maxRenewalsPerResource": 2,
            "maxUsersInWaitingQueue": 100
            }
            
+ Response 204

### Delete lender by id [DELETE]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|     |

+ Response 204 



## All lenders [/v1.0/lender/all]
### Get all lenders [GET]

+ Request
    + Headers

            Authorization : Bearer {token}
            Accept : (application/json)

+ Response 200
    
        [
            {
            "id": "LenderId1"
            "borrowPeriod": "P5D",
            "freeReturnPeriod": "P1D",
            "reservationPeriod": "P1D",
            "maxConcurrentLoansPerUser": 5,
            "maxLoansPerUserInMonth": 20,
            "maxRenewalsPerResource": 2,
            "maxUsersInWaitingQueue": 100
            },
            {
            "id": "LenderId2"
            "borrowPeriod": "P5D",
            "freeReturnPeriod": "P1D",
            "reservationPeriod": "P1D",
            "maxConcurrentLoansPerUser": 5,
            "maxLoansPerUserInMonth": 20,
            "maxRenewalsPerResource": 2,
            "maxUsersInWaitingQueue": 100
            }
        ]

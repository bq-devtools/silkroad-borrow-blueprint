FORMAT: 1A
HOST: https://borrow-int.bqws.io/

# Borrow (v1.0)
This module controls the resource loans.
When a user wants to borrow a resource, he needs to use this module. If the resource is available to be borrowed, the user will get a temporal asset to access it.

## Loanable Resources [/v1.0/borrow]
### Add loanable resource [POST]

###Parameters###
|Name|Description|Type|Default|Required
|----|-----------|----|:-----:|:------:|
|resourceId|Identifier of resource|string||*|
|availableUses|Amount of uses that the resource is available|number||*|
|availableLoans|Amount of concurrent loans are available for the resource|number||*
|expire|expire date|timestamp||*|
|start|start date|timestamp||*|
|asset|asset asigned to the resource|string||*|

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 201 (application/json)
    + Header
    
            Location: https://silkroad/borrow/123

        
## Loanable Resource [/v1.0/borrow/{id}]
### Get loanable resource [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource unavailable|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }],
        "loanable":true,
        "usersInWaitingQueue":0}
        
### Delete loanable resource [DELETE]

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)
        

## All Resources Borrowed of user [/v1.0/borrow/loan/{userId}]
### Get all resources borrowed [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        [{"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }]   
            
# All Resources Borrowed of user logged [/v1.0/borrow/loan/me]
### Get all resources borrowed [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        [{"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }]        
            
##Resource Borrowed of user [/v1.0/borrow/{resourceId}/loan/{userId}]
###resource borrowed [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        [{"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }]        
            
## Loanable Resources History [/v1.0/borrow/history]
### Get loanable resources history [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "userId":"1937djpifoi3142",
             "resourceId":"resourceId1423041701849",
             "start":1423041701849,
             "expire":1423041711849,
             "freeReturned":true,
             "freeReturned":true,
             "type": "RENEW" ]
        }            
        
        
## Loanable Resources History for a user [/v1.0/borrow/history/{userId}]
### Get loanable resources history [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "userId":"1937djpifoi3142",
             "resourceId":"resourceId1423041701849",
             "start":1423041701849,
             "expire":1423041711849,
             "freeReturned":true,
             "freeReturned":true,
             "type": "RENEW" ]
        }            

## Resource Loans [/v1.0/borrow/{id}/loan/{userId}]
### Apply for a loan [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|
|409  |conflict|If the resource can not be borrowed|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)


## Resource Loans [/v1.0/borrow/{id}/loan/me]


### Return a Loaned Resource [DELETE]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204

## Book a Resource [/v1.0/borrow/{id}/book/{userId}]
### Book an unavailable resource [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|
|409  |conflict|If the resource can not be book|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)

### Cancel resource reservation [DELETE]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204

## Renew a Resource [/v1.0/borrow/{id}/renew/{userId}]
### Renew a borrowed resource [PUT]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|404  |not_found|Resource not found|
|409  |conflict|If the user hasn't resource borrowed |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 204 (application/json)

## All Booked resources [/v1.0/book]
### Get all booked resources [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }],
        "loanable":true,
        "usersInWaitingQueue":0}
        
        
## All Booked resources of user [/v1.0/book/{userId}]
### Get all booked resources of user [GET]

###Errors###
|Status|Error|Description|
|------|-----|-----------|
|401  |unauthorized|If the access_token is not associated with any user|
|405  |not_allowed|If the userId is wrong |

+ Request
    + Headers

            Authorization : Bearer {token}

+ Response 200 (application/json)

        {"resources":[
            {"id":"54d1e4a6ccf2fdefb867ca06",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701849",
             "availableUses":100,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            },
            {"id":"54d1e4a6ccf2fdeasce54assh",
             "lenderId":"silkroad-qa",
             "resourceId":"resourceId1423041701845",
             "availableUses":10,
             "availableLoans":5,
             "start":1423041701849,
             "expire":1423041711849,
             "asset":{
                 "scopes":["scopeTest"],
                 "name":"assetTest",
                 "period":"P0D"}
            }],
        "loanable":true,
        "usersInWaitingQueue":0}